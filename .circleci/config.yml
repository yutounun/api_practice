# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
      # get docker-image to use python and pip.
      - image: circleci/python:3.6
      - image: circleci/mysql:5.7
        command: |
          mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
        environment:
          MYSQL_DATABASE: circle_test
          MYSQL_USER: root
          MYSQL_ROOT_HOST: "%"
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
      - run:
          name: install
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      # Python仮想環境を保管
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      # dockerizeのインストール
      - run:
          name: install dockerize
          command: |
            [ ! -f /usr/local/bin/dockerize ] && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            true
          environment:
            DOCKERIZE_VERSION: v0.5.0

      # mysqlコンテナの起動待機
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      # データベースのテーブルの作成などの初期化(データベースはコンテナ初期化時に作成される)
      - run:
          name: initialize db
          command: |
            . venv/bin/activate
            python manage.py makemigrations --settings mysite.settings.ci
            python manage.py migrate        --settings mysite.settings.ci

      # テストの実行
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python3 manage.py test --settings mysite.settings.ci
      - run:
          name: Running tests
          command: |
            .venv/bin/activate
            python3 tinder_api/manage.py test

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
